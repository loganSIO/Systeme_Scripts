Part 1 /

a) pwd >> resultat_recherche.txt

b) date >> resultat_recherche.txt

c) ls -l | grep '^-' | awk '{sum += $5} END {printf "%d fichiers, taille totale : %.2f Mo\n", NR, sum/1024/1024}' >> resultat_recherche.txt

d) ls -l | grep '^d' | wc -l >> resultat_recherche.txt

e) tree -L quelque chose) >> resultat_recherche.txt

f) find -type d -name '[!.]*' -exec du -sh {} + | sort -h ou du -h --max-depth=1 >> resultat_recherche.txt

g) cd documents >> resultat_recherche.txt

h) read -p "Entrez une date au format yyyy-mm-dd : " date_param
find . -type f -newermt "$date_param" >> resultat_recherche.txt

i) read -p "Entrez une date au format yyyy-mm-dd : " date_param
find . -type f -newermt "$date_param" -print >> resultat_recherche.txt

j) read -p "Entrez une date au format yyyy-mm-dd : " date_param
find . -type f ! -newermt "$date_param" -print >> resultat_recherche.txt

k) read -p "Entrez une date au format yyyy-mm-dd : " date_param
find . -type f ! -newermt "$date_param" -print >> resultat_recherche.txt

l) read -p "Entrez la taille minimale en Ko : " taille_param
find . -type f -size +"$taille_param"k -print >> resultat_recherche.txt

read -p "Entrez la taille minimale en Mo : " taille_param
find . -type f -size +"$taille_param"M -print >> resultat_recherche.txt

n) read -p "Entrez la taille maximale en Ko : " taille_param
find . -type f -size "-$taille_param"k -print >> resultat_recherche.txt

read -p "Entrez la taille maximale en Mo : " taille_param
find . -type f -size "-$taille_param"M -print >> resultat_recherche.txt

o)read -p "Entrez la taille maximale en Ko : " taille_param
find . -type f -size "-$taille_param"k -print >> resultat_recherche.txt

read -p "Entrez la taille maximale en Mo : " taille_param
find . -type f -size "-$taille_param"M -print >> resultat_recherche.txt

p)read -p "Entrez l'extension de fichier recherchée : " extension_param
find . -type f -name "*.$extension_param" -print >> resultat_recherche.txt

q) read -p "Entrez l'extension recherchée (sans le point): " extension
find . -maxdepth 1 -type f -name "*.$extension" >> resultat_recherche.txt

r) read -p "Entrez la chaîne de caractères : " chaine
find . -type f -name "*chaine*" >> resultat_recherche.txt

s) >> resultat_recherche.txt

t)



#!/bin/bash

# Etape 1 : Demande à l'utilisateur la date à utiliser pour la recherche de fichiers plus anciens
read -p "Entrez une date au format AAAA-MM-JJ : " date_param

# Etape 2 : Recherche les fichiers plus anciens que la date donnée dans le répertoire courant et les sous-répertoires
find . -type f -mtime +"$(echo $(date -d "$date_param" +%s) / 86400 | bc)" > fichier_resultat.txt

# Etape 3 : Demande à l'utilisateur la taille minimale des fichiers à rechercher
read -p "Entrez la taille minimale des fichiers à rechercher en Mo : " taille_param

# Etape 4 : Recherche les fichiers de poids supérieur à la valeur indiquée dans le répertoire courant et les sous-répertoires
find . -type f -size +"$taille_param"M > fichier_resultat.txt

# Etape 5 : Demande à l'utilisateur la taille maximale des fichiers à rechercher
read -p "Entrez la taille maximale des fichiers à rechercher en ko : " taille_param

# Etape 6 : Recherche les fichiers de poids inférieur à la valeur indiquée dans le répertoire courant et les sous-répertoires
find . -type f -size -"$taille_param"k > fichier_resultat.txt

# Etape 7 : Demande à l'utilisateur l'extension des fichiers à rechercher
read -p "Entrez l'extension des fichiers à rechercher : " extension_param

# Etape 8 : Recherche tous les fichiers de l'extension indiquée dans le répertoire courant et les sous-répertoires
find . -type f -name "*.$extension_param" > fichier_resultat.txt

# Etape 9 : Demande à l'utilisateur la chaîne de caractères à rechercher dans les noms des fichiers
read -p "Entrez la chaîne de caractères à rechercher dans les noms des fichiers : " chaine_param

# Etape 10 : Recherche tous les fichiers dont le nom contient la chaîne de caractères indiquée dans le répertoire courant et les sous-répertoires
find . -type f -name "*$chaine_param*" > fichier_resultat.txt

# Etape 11 : Ajoute le résultat de la recherche à un fichier de sortie en tenant compte de la date et l'heure système
date_format=$(date '+%Y-%m-%d_%H-%M-%S')
fichier_resultat="fichier_resultat_$date_format.txt"
cat fichier_resultat.txt >> "$fichier_resultat"
echo "Le résultat de la recherche a été enregistré dans le fichier $fichier_resultat."





#!/bin/bash

# Fonction pour effectuer la recherche de fichiers par taille
search_by_size() {
    echo "Rechercher les fichiers de poids supérieur ou inférieur à une valeur en ko (ex : 1000) :"
    read -r size
    echo "Rechercher les fichiers de poids supérieur ou inférieur à la valeur $size ko ? (s/i)"
    read -r op
    if [ "$op" = "s" ]; then
        find . -type f -size +"$size"k
    elif [ "$op" = "i" ]; then
        find . -type f -size -"$size"k
    fi
}

# Fonction pour effectuer la recherche de fichiers par date
search_by_date() {
    echo "Rechercher les fichiers modifiés avant ou après une date (format : yyyy-mm-dd) :"
    read -r date
    echo "Rechercher les fichiers modifiés avant ou après la date $date ? (a/p)"
    read -r op
    if [ "$op" = "a" ]; then
        find . -type f -newermt "$date" ! -newermt "$(date)"
    elif [ "$op" = "p" ]; then
        find . -type f -not -newermt "$date" ! -newermt "$(date)"
    fi
}

# Fonction pour effectuer la recherche de fichiers par nom
search_by_name() {
    echo "Rechercher tous les fichiers dont le nom contient une chaine de caractère :"
    read -r name
    find . -type f -name "*$name*"
}

# Fonction pour combiner plusieurs filtres de recherche
search_by_filters() {
    echo "Voulez-vous rechercher par taille ? (o/n)"
    read -r opt_size
    if [ "$opt_size" = "o" ]; then
        search_by_size
    fi

    echo "Voulez-vous rechercher par date ? (o/n)"
    read -r opt_date
    if [ "$opt_date" = "o" ]; then
        search_by_date
    fi

    echo "Voulez-vous rechercher par nom ? (o/n)"
    read -r opt_name
    if [ "$opt_name" = "o" ]; then
        search_by_name
    fi
}

# Affichage du menu
while true; do
    echo ""
    echo "MENU"
    echo "1. Rechercher les fichiers d'une extension donnée dans le répertoire courant"
    echo "2. Rechercher les fichiers d'une extension donnée dans tous les sous-répertoires de l’arborescence du répertoire courant"
    echo "3. Rechercher tous les fichiers dont le nom contient une chaîne de caractères dans tous les sous-répertoires de l’arborescence du répertoire courant"
    echo "4. Rechercher par taille, date ou nom"
    echo "5. Quitter"
    read -r choice

    case "$choice" in
        1)
            echo "Rechercher les fichiers d'une extension donnée (ex : txt) :"
            read -r extension
            find . -type f -name "*.$extension"
            ;;
        2)
           



